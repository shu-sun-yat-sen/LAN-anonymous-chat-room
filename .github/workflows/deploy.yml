# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Maven Package

on:
  push:
    branches:
      - AI-service
  release:
    types: [created]

jobs:
  build:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: write
      packages: write
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          server-id: github
          settings-path: ${{ github.workspace }}/src/server2
      - name: Build with Maven
        run: mvn clean package --file $GITHUB_WORKSPACE/src/server2/pom.xml

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18' # 指定Node.js的版本
      - name: Install dependencies
        run: npm install
        working-directory: ./src/client-side-application # 指定前端项目的目录
      - name: Build frontend
        run: npm run build
        working-directory: ./src/client-side-application # 指定前端项目的目录

  release:
    if: github.event_name == 'push' && startsWith(github.ref_name, 'v')
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./src/server2/target/SYSU_LACR.jar
          asset_name: SYSU_LACR.jar
          asset_content_type: application/java-archive

      - name: Archive Frontend Build
        run: zip -r build-frontend.zip ./src/client-side-application/build
      - name: Upload Frontend Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build-frontend.tar.gz
          asset_name: build-frontend.tar.gz
          asset_content_type: application/gzip